version: '2'
volumes:
  # for rabbitmq
  message_queue_datavolume: 
services:
  api:
    image: "${image_prefix}/api:${image_tag}"
    environment:
      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      - 'NODE_ENV=production'
      - PORT=${api_port}
    expose:
      - "${api_port}"
    links:
      - message-queue
    command:
      - bash
      - start.sh
    labels:
      io.rancher.scheduler.global: 'true'

  cron:
    image: '${image_prefix}/cron:${image_tag}'
    environment:
      - "API_ADDRESS=http://api:${api_port}/api"
      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      - "DATABASE_URL=postgres://${main_db_user}:${main_db_pass}@${main_db_url}/${main_db_name}"
      - "TRANSACTION_DATABASE_URL=postgres://${transaction_db_user}:${transaction_db_pass}@${transaction_db_url}/${transaction_db_name}"
    links:
      - message-queue
      - api
    labels:
      io.rancher.scheduler.global: 'true'

<<<<<<< HEAD
      #  db-worker:
      #    image: '${image_prefix}/pushkin-db-worker:${image_tag}'
      #    environment:
      #      - 'NODE_ENV=production'
      #      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      #      - "DATABASE_URL=postgres://${main_db_user}:${main_db_pass}@${main_db_url}/${main_db_name}"
      #      - "TRANSACTION_DATABASE_URL=postgres://${transaction_db_user}:${transaction_db_pass}@${transaction_db_url}/${transaction_db_name}"
      #    links:
      #      - message-queue
      #    command:
      #      - bash
      #      - start.sh
      #    labels:
      #      io.rancher.scheduler.global: 'true'
=======
  db-worker:
    image: '${image_prefix}/db-worker:${image_tag}'
    environment:
      - 'NODE_ENV=production'
      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      - "DATABASE_URL=postgres://${main_db_user}:${main_db_pass}@${main_db_url}/${main_db_name}"
      - "TRANSACTION_DATABASE_URL=postgres://${transaction_db_user}:${transaction_db_pass}@${transaction_db_url}/${transaction_db_name}"
    links:
      - message-queue
    command:
      - bash
      - start.sh
    labels:
      io.rancher.scheduler.global: 'true'
>>>>>>> merge conf

  message-queue:
    image: 'rabbitmq:3.6-management'
    expose:
      - '5672'
      - '15672'
    ports:
      - '15672'
    environment:
      CONFD_ARGS: '--interval 5'
      RABBITMQ_CLUSTER_PARTITION_HANDLING: autoheal
      RABBITMQ_NET_TICKTIME: '60'
      RABBITMQ_ERLANG_COOKIE: 'message-queue-cookie'
      RABBITMQ_NODENAME: "rabbitmqnode@${rabbitmq_hostname}"
    volumes:
        # database location
        # config file stored in /etc/rabbitmq/rabbitmq.config
      - message_queue_datavolume:/var/lib/rabbitmq 
    labels:
      io.rancher.scheduler.global: 'true'

  server:
    image: '${image_prefix}/server:${image_tag}'
    labels:
      io.rancher.scheduler.global: 'true'
    environment:
      API_PORT: "${api_port}"
    expose:
      - '80'
      - '443'
    ports:
      - '80'
      - '433'
    links:
      - api

# ###############################################################
# #@AUTOAPPENDBELOWTHISLINE
# # note: if this image name must be changed,
# # make sure prepareToDeploy matches up with it in the
# # build stage of quiz-specific workers
# #
# # indentation must match main compose file

# # image prefix and tag are variables stored in main .env file

#   bloodmagic-quiz:
#     image: '${image_prefix}/pushkin-bloodmagic-quiz:${image_tag}'
#     command: 'bash start.sh'
#     depends_on:
#       - "message-queue"
#     links:
#       - message-queue
#     environment:
#       - AMQP_ADDRESS=amqp://message-queue:5672
#       - QUEUE=bloodmagic_api_queue
