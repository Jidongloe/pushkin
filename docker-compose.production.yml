version: '2'
services:
  api:
    image: "${image_prefix}/pushkin-api:${image_tag}"
    environment:
      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      - 'NODE_ENV=production'
      - PORT=${api_port}
    expose:
      - "${api_port}"
    links:
      - message-queue
    command:
      - bash
      - start.sh
    labels:
      io.rancher.scheduler.global: 'true'

      #  front-end:
      #    image: "${image_prefix}/pushkin-front-end:${image_tag}"
      #    environment:
      #      - "cloudfront_url=${cloudfront_url}"
      #      - "google_analytics_site_id=${google_analytics_site_id}"
      #      - "isdebug=${isdebug}"
      #      - 'PORT=80'
      #    expose:
      #      - '80'
      #      - '443'

  cron:
    image: '${image_prefix}/pushkin-cron:${image_tag}'
    environment:
      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      - "API_ADDRESS=http://api:${api_port}/api"
      - "DATABASE_URL=postgres://${main_db_user}:${main_db_pass}@${main_db_url}/${main_db_name}"
      - "transaction_database_url=postgres://${transaction_db_user}:${transaction_db_pass}@${transaction_db_url}/${transaction_db_name}"
    links:
      - message-queue
      - api
    labels:
      io.rancher.scheduler.global: 'true'

  db-worker:
    image: '${image_prefix}/pushkin-db-worker:${image_tag}'
    environment:
      - 'NODE_ENV=production'
      - 'AMQP_ADDRESS=amqp://message-queue:5672'
      - "database_url=postgres://${main_db_user}:${main_db_pass}@${main_db_url}/${main_db_name}"
      - "transaction_database_url=postgres://${transaction_db_user}:${transaction_db_pass}@${transaction_db_url}/${transaction_db_name}"
    links:
      - message-queue
    command:
      - bash
      - start.sh
    labels:
      io.rancher.scheduler.global: 'true'

# need corresponding rancher-compose file for this to work properly, which we're missing
# just set up on rancher via the ui for now (link to front-end? server?)
      #  load-balancer:
      #    image: 'rancher/lb-service-haproxy'
      #    ports:
      #      - '80'
      #      - '443'
      #    labels:
      #      io.rancher.scheduler.global: 'true'
      #      io.rancher.container.agent.role: environmentAdmin
      #      io.rancher.container.create_agent: 'true'

  message-queue:
    #    image: 'gameswithwords/message-queue:latest'
    image: 'rabbitmq:3.6-management'
    expose:
      - '5672'
    environment:
      CONFD_ARGS: '--interval 5'
      RABBITMQ_CLUSTER_PARTITION_HANDLING: autoheal
      RABBITMQ_NET_TICKTIME: '60'
      RABBITMQ_ERLANG_COOKIE: 'message-queue-cookie'
      RABBITMQ_NODENAME: "rabbitmqnode@${rabbitmq_hostname}"
    volumes:
        # database location
        # config file stored in /etc/rabbitmq/rabbitmq.config
      - message_queue_datavolume:/var/lib/rabbitmq 
    labels:
      io.rancher.scheduler.global: 'true'

  server:
    image: '${image_prefix}/pushkin-server:${image_tag}'
    labels:
      io.rancher.scheduler.global: 'true'
    environment:
      API_PORT: "${api_port}"
    expose:
      - '80'
      - '443'
        #    ports:
        #      - '80'
        #      - '433'
    links:
      - api

      #  listener-quiz:
      #    image: '${IMAGE_PREFIX}/pushkin-listener-quiz:latest'
      #    command: 'bash start.sh'
      #    depends_on:
      #      - message-queue
      #    environment:
      #      - AMQP_ADDRESS=amqp://message-queue:5672
      #      - QUEUE=listener-quiz
      #    links:
      #      - message-queue
      #    labels:
      #      io.rancher.scheduler.global: 'true'
      #    volumes:
      #      - message_queue_datavolume:/rabbitmq

volumes:
  # for rabbitmq
  message_queue_datavolume: 





